version: 2

defaults: &defaults
  working_directory: /tmp/project
  docker:
    - image: arcanemagus/atom-docker-ci:stable
  steps:
    # Restore project state
    - attach_workspace:
        at: /tmp
    # Restore Hadolint
    - restore_cache:
        keys:
        - v1-hadolint-{{ arch }}
    - run:
        name: Install Haskell
        command: |
          sudo apt-get update && \
          sudo apt-get install --assume-yes --quiet --no-install-suggests \
            --no-install-recommends haskell-platform
    - run:
        name: Install Stack
        command: |
          curl --location --silent --show-error -o install_stack.sh \
            https://get.haskellstack.org/ && \
          sh install_stack.sh && \
          echo 'export PATH=~/.local/bin:$PATH' >> $BASH_ENV
    - run:
        name: Haskell version
        command: ghc --version
    - run:
        name: Stack version
        command: stack --version
    - run:
        name: Install Hadolint
        command: |
          if [ -d "/home/atom/hadolint" ]; then
            cd ~/hadolint && git pull origin
          else
            git clone --depth=10 \
              https://github.com/lukasmartinelli/hadolint \
              ~/hadolint
          fi
          cd ~/hadolint && \
          stack install --install-ghc hadolint
    - run:
        name: Hadolint version
        command: hadolint --version
    - run:
        name: Create VFB for Atom to run in
        command: /usr/local/bin/xvfb_start
    - run:
        name: Atom version
        command: ${ATOM_SCRIPT_PATH} --version
    - run:
        name: APM version
        command: ${APM_SCRIPT_PATH} --version
    - run:
        name: Package APM package dependencies
        command: |
          if [ -n "${APM_TEST_PACKAGES}" ]; then
            for pack in ${APM_TEST_PACKAGES}; do
            ${APM_SCRIPT_PATH} install "${pack}"
            done
          fi;
    - run:
        name: Package dependencies
        command: ${APM_SCRIPT_PATH} install
    - run:
        name: Cleaning package
        command: ${APM_SCRIPT_PATH} clean
    - run:
        name: Package specs
        command: ${ATOM_SCRIPT_PATH} --test spec
    # Cache node_modules
    - save_cache:
        paths:
          - node_modules
        key: v3-dependencies-{{ .Branch }}-{{ checksum "package.json" }}-{{ checksum "package-lock.json"}}
    # Cache Stack and hadolint, keyed on hadolint binary
    - save_cache:
        paths:
          - "~/.local"
          - "~/.stack"
          - "~/hadolint"
        key: v1-hadolint-{{ arch }}-{{ checksum "/home/atom/.local/bin/hadolint" }}

jobs:
  checkout_code:
    <<: *defaults
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      # Restore node_modules from the last build
      - restore_cache:
          keys:
          # Get latest cache for this package.json and package-lock.json
          - v3-dependencies-{{ .Branch }}-{{ checksum "package.json" }}-{{ checksum "package-lock.json"}}
          # Fallback to the current package.json
          - v3-dependencies-{{ .Branch }}-{{ checksum "package.json" }}-
          # Fallback to the last build for this branch
          - v3-dependencies-{{ .Branch }}-
          # Fallback to the last available master branch cache
          - v3-dependencies-master-
          # Don't go further down to prevent dependency issues from other branches
      # Save project state for next steps
      - persist_to_workspace:
          root: /tmp
          paths:
            - project
  lint:
    <<: *defaults
    docker:
      - image: circleci/node:lts
    steps:
      # Restore project state
      - attach_workspace:
          at: /tmp
      - run:
          name: Node.js Version
          command: node --version
      - run:
          name: NPM Version
          command: npm --version
      - run:
          name: Install any remaining dependencies
          command: npm install
      - run:
          name: Lint code
          command: npm run lint
  stable:
    <<: *defaults
  beta:
    <<: *defaults
    docker:
      - image: arcanemagus/atom-docker-ci:beta

workflows:
  version: 2
  test_package:
    jobs:
      - checkout_code
      - lint:
          requires:
            - checkout_code
      - stable:
          requires:
            - lint
      - beta:
          requires:
            - lint
